[package]
name = "zeta-quantize"
version = "0.1.0"
edition = "2021"
authors = ["Zeta Reticula Team"]
description = "Production-ready LLM quantization engine for the Zeta Reticula platform"
license = "MIT"
repository = "https://github.com/zeta-reticula/zeta-quantize"
keywords = ["llm", "quantization", "machine-learning", "inference", "optimization"]
categories = ["science", "command-line-utilities"]

[[bin]]
name = "zeta-quantize"
path = "src/main.rs"

[dependencies]
# Core ML and tensor operations
candle-core = "0.6.0"
candle-nn = "0.6.0"
candle-transformers = "0.6.0"

# Model format support
safetensors = "0.4.0"
hf-hub = "0.3.2"

# CLI and configuration
clap = { version = "4.4.0", features = ["derive", "env"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
toml = "0.8.0"

# Async runtime and utilities
tokio = { version = "1.35.0", features = ["full"] }
futures = "0.3"

# Error handling and logging
anyhow = "1.0"
thiserror = "1.0"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }

# Memory and performance
ndarray = "0.15"
rayon = "1.8"
memmap2 = "0.9"
bumpalo = "3.14"
half = "2.3"

# Benchmarking and testing
criterion = { version = "0.5", features = ["html_reports"] }

# Zeta Reticula components (local dependencies)
ns-router-rs = { path = "../ns-router-rs" }
agentflow-rs = { path = "../agentflow-rs", features = ["server"] }
salience-engine = { path = "../salience-engine", features = ["server"] }
kvquant_rs = { path = "../kvquant_rs" }
shared = { path = "../shared" }

# Additional dependencies for tokenization
regex = "1.10"
dashmap = "5.5"
tonic = "0.10"
log = "0.4"
env_logger = "0.10"
bincode = "1.3"
lru = "0.12"
async-trait = "0.1"
chrono = { version = "0.4", features = ["serde"] }

# Zeta Vault Synergy (mock dependency for compilation)
zeta-vault-synergy = { path = "../zeta-vault-synergy", optional = true }

# Optional GPU support
[dependencies.cudarc]
version = "0.10"
optional = true

[dev-dependencies]
tempfile = "3.8"
proptest = "1.4"

[features]
default = ["cpu-optimized"]
cpu-optimized = []
gpu = ["cudarc"]
benchmark = []

[profile.release]
lto = true
codegen-units = 1
panic = "abort"
strip = true

[profile.bench]
debug = true

[[bench]]
name = "quantization_bench"
harness = false
required-features = ["benchmark"]
