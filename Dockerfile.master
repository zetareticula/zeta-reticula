# Stage 1: Build environment
FROM --platform=linux/amd64 rust:1.82-slim-bookworm AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    build-essential \
    cmake \
    curl \
    git \
    clang \
    lld \
    protobuf-compiler \
    libprotobuf-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app/zeta-reticula

# Copy only the necessary files for building
COPY Cargo.toml Cargo.lock ./
COPY master-service/ master-service/
COPY shared/ shared/
COPY protos/ protos/

# Create dummy src directory for workspace
RUN mkdir -p src && echo 'fn main() {}' > src/main.rs

# Build in release mode
RUN cargo build --release -p master-service

# Stage 2: Runtime image
FROM debian:bullseye-slim AS runtime

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy the binary from the builder
COPY --from=builder /app/zeta-reticula/target/release/master-service /usr/local/bin/

# Default command
ENV RUST_LOG=info
ENV PORT=8080
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s \
  CMD curl -f http://localhost:8080/healthz || exit 1

ENTRYPOINT ["/usr/local/bin/master-service"]
