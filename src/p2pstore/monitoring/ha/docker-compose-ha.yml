version: '3.8'

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data_1:
  prometheus_data_2:
  thanos_sidecar_data_1:
  thanos_sidecar_data_2:
  thanos_store_data:
  alertmanager_data:

services:
  # Prometheus replicas
  prometheus-1:
    image: prom/prometheus:v2.30.0
    container_name: prometheus-1
    command:
      - '--config.file=/etc/prometheus/prometheus-ha.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-admin-api'
      - '--web.enable-lifecycle'
      - '--web.route-prefix=/'
    volumes:
      - ./prometheus-ha.yml:/etc/prometheus/prometheus-ha.yml
      - ./alert.rules.yml:/etc/prometheus/alert.rules.yml
      - prometheus_data_1:/prometheus
    ports:
      - "9091:9090"
    networks:
      - monitoring
    environment:
      - HOSTNAME=prometheus-1

  prometheus-2:
    image: prom/prometheus:v2.30.0
    container_name: prometheus-2
    command:
      - '--config.file=/etc/prometheus/prometheus-ha.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-admin-api'
      - '--web.enable-lifecycle'
      - '--web.route-prefix=/'
    volumes:
      - ./prometheus-ha.yml:/etc/prometheus/prometheus-ha.yml
      - ./alert.rules.yml:/etc/prometheus/alert.rules.yml
      - prometheus_data_2:/prometheus
    ports:
      - "9092:9090"
    networks:
      - monitoring
    environment:
      - HOSTNAME=prometheus-2

  # Thanos components
  thanos-sidecar-1:
    image: thanosio/thanos:v0.24.0
    container_name: thanos-sidecar-1
    command:
      - sidecar
      - --prometheus.url=http://prometheus-1:9090
      - --tsdb.path=/prometheus
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --objstore.config-file=/etc/thanos/minio-bucket.yml
    volumes:
      - prometheus_data_1:/prometheus
      - ./minio-bucket.yml:/etc/thanos/minio-bucket.yml
    ports:
      - "10901:10901"
      - "10902:10902"
    networks:
      - monitoring
    depends_on:
      - prometheus-1

  thanos-sidecar-2:
    image: thanosio/thanos:v0.24.0
    container_name: thanos-sidecar-2
    command:
      - sidecar
      - --prometheus.url=http://prometheus-2:9090
      - --tsdb.path=/prometheus
      - --grpc-address=0.0.0.0:10901
      - --http-address=0.0.0.0:10902
      - --objstore.config-file=/etc/thanos/minio-bucket.yml
    volumes:
      - prometheus_data_2:/prometheus
      - ./minio-bucket.yml:/etc/thanos/minio-bucket.yml
    ports:
      - "10911:10901"
      - "10912:10902"
    networks:
      - monitoring
    depends_on:
      - prometheus-2

  thanos-query:
    image: thanosio/thanos:v0.24.0
    container_name: thanos-query
    command:
      - query
      - --http-address=0.0.0.0:10904
      - --query.replica-label=replica
      - --store=thanos-sidecar-1:10901
      - --store=thanos-sidecar-2:10901
    ports:
      - "10904:10904"
    networks:
      - monitoring
    depends_on:
      - thanos-sidecar-1
      - thanos-sidecar-2

  thanos-store:
    image: thanosio/thanos:v0.24.0
    container_name: thanos-store
    command:
      - store
      - --data-dir=/var/thanos/store
      - --objstore.config-file=/etc/thanos/minio-bucket.yml
    volumes:
      - thanos_store_data:/var/thanos/store
      - ./minio-bucket.yml:/etc/thanos/minio-bucket.yml
    ports:
      - "10905:10905"
    networks:
      - monitoring

  thanos-compact:
    image: thanosio/thanos:v0.24.0
    container_name: thanos-compact
    command:
      - compact
      - --data-dir=/var/thanos/compact
      - --objstore.config-file=/etc/thanos/minio-bucket.yml
      - --wait
    volumes:
      - thanos_store_data:/var/thanos/compact
      - ./minio-bucket.yml:/etc/thanos/minio-bucket.yml
    networks:
      - monitoring

  # Alertmanager for handling alerts
  alertmanager:
    image: prom/alertmanager:v0.23.0
    container_name: alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    ports:
      - "9093:9093"
    networks:
      - monitoring

  # MinIO for object storage (can be replaced with S3, GCS, etc.)
  minio:
    image: minio/minio:RELEASE.2021-08-17T20-53-08Z
    container_name: minio
    command: server /data
    environment:
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - monitoring

  # Grafana for visualization
  grafana:
    image: grafana/grafana:8.1.5
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    networks:
      - monitoring
    depends_on:
      - thanos-query

  # Node exporter for system metrics
  node-exporter:
    image: prom/node-exporter:v1.2.2
    container_name: node-exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    volumes:
      - '/:/host:ro,rslave'
    ports:
      - "9100:9100"
    networks:
      - monitoring
