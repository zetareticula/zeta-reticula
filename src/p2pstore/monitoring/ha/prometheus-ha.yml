global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    replica: ${HOSTNAME}
    cluster: p2pstore-ha

# Remote write configuration for Thanos or other remote storage
remote_write:
  - url: http://thanos-receive:19291/api/v1/receive
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 10000

# Remote read configuration for querying metrics from the remote storage
remote_read:
  - url: http://thanos-query:10904/api/v1/read
    read_recent: true

# Alerting configuration
alerting:
  alert_relabel_configs:
    - source_labels: [replica]
      regex: (.+)\n.*
      target_label: replica
      replacement: $1
  alertmanagers:
    - static_configs:
        - targets: ['alertmanager:9093']

# Rule files specifies a list of globs. Rules and alerts are read from
# all matching files.
rule_files:
  - 'alert.rules.yml'

scrape_configs:
  - job_name: 'p2pstore'
    static_configs:
      - targets: ['p2pstore:9090']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __metrics_path__
        replacement: /metrics

  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  - job_name: 'thanos-sidecar'
    static_configs:
      - targets: ['thanos-sidecar:10902']

  - job_name: 'thanos-query'
    static_configs:
      - targets: ['thanos-query:10904']

  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']

# Service discovery for Kubernetes (uncomment if using k8s)
# - job_name: 'kubernetes-apiservers'
#   kubernetes_sd_configs:
#   - role: endpoints
#     namespaces:
#       names: ['default']
#   scheme: https
#   tls_config:
#     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#     insecure_skip_verify: true
#   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#   relabel_configs:
#   - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
#     action: keep
#     regex: default;kubernetes;https
