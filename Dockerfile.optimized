# Stage 1: Base builder with all build dependencies
FROM --platform=linux/amd64 rustlang/rust:nightly-slim as builder

# Install build dependencies with cleanup in one layer
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    pkg-config \
    libssl-dev \
    lld \
    clang \
    protobuf-compiler \
    && rm -rf /var/lib/apt/lists/*

# Set up workspace
WORKDIR /usr/src/zeta

# Copy all source code
COPY . .

# Build the application with optimizations
RUN cargo build --release --bin zeta \
    && strip /usr/src/zeta/target/release/zeta

# Runtime image (ultra-slim)
FROM debian:bullseye-slim

# Install runtime dependencies with cleanup in one layer
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy only the binary from the builder
COPY --from=builder /usr/src/zeta/target/release/zeta /usr/local/bin/

# Set environment variables for better performance
ENV RUST_LOG=info \
    RUST_BACKTRACE=1 \
    RUSTFLAGS="-C target-cpu=native"

# Non-root user for security
RUN useradd -m zeta
USER zeta

# Default command
ENTRYPOINT ["zeta"]

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD ["zeta", "system", "status"]
